{"version":3,"sources":["components/footer/Footer.module.css","components/header/Header.module.css","components/app/App.module.css","components/center/Center.module.css","svg/wi-strong-wind.svg","svg/wi-day-rain-wind.svg","svg/wi-night-rain-wind.svg","svg/wi-day-rain.svg","svg/wi-day-snow.svg","svg/wi-day-sunny.svg","svg/wi-night-clear.svg","svg/wi-cloud.svg","svg/wi-night-cloudy.svg","svg/wi-na.svg","svg/wi-fog.svg","helpers/helpers.ts","components/header/Header.tsx","components/center/Center.tsx","components/footer/Footer.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","imgHandler","code","DaySunny","NightClear","Cloud","NCloud","DayRainWind","NRainWind","DayRain","StrongWind","DaySnow","Fog","Na","getInfo","city","unit","setData","fetch","then","response","json","data","cod","catch","err","console","log","Search","Input","Header","setOpenSearch","openSearch","inputRef","useState","degree","setDegree","cityName","setCityName","useEffect","val","className","s","headerBlock","ref","onClick","e","stopPropagation","leftBlock","name","direction","placeholder","onSearch","style","width","bottomText","rightBlock","opacity","navigator","geolocation","getCurrentPosition","position","coords","lat","lon","callback","query","count","options","method","mode","headers","body","JSON","stringify","result","suggestions","error","getPlace","latitude","longitude","Center","mainBlock","weather","map","item","str","tempBlock","type","icon","height","Math","round","main","temp","description","toUpperCase","slice","Footer","footerBlock","infoBlock","headerText","wind","speed","pressure","humidity","feels_like","App","React","useRef","target","current","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3695d67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerBlock\":\"Footer_footerBlock__35gOe\",\"bottomText\":\"Footer_bottomText__2zml8\",\"headerText\":\"Footer_headerText__ZuMuL\",\"infoBlock\":\"Footer_infoBlock__10DbJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__27aTw\",\"cityName\":\"Header_cityName__Jcxe_\",\"leftBlock\":\"Header_leftBlock__1N153\",\"bottomText\":\"Header_bottomText__3Kh26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"App_mainBlock__3E4GP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Center_mainBlock__2_ZbV\",\"tempBlock\":\"Center_tempBlock__12hTW\"};","export default __webpack_public_path__ + \"static/media/wi-strong-wind.a5ee1b7b.svg\";","export default __webpack_public_path__ + \"static/media/wi-day-rain-wind.88b0168f.svg\";","export default __webpack_public_path__ + \"static/media/wi-night-rain-wind.474cc7ca.svg\";","export default __webpack_public_path__ + \"static/media/wi-day-rain.d16f4653.svg\";","export default __webpack_public_path__ + \"static/media/wi-day-snow.3427bd6d.svg\";","export default __webpack_public_path__ + \"static/media/wi-day-sunny.41b3b2cb.svg\";","export default __webpack_public_path__ + \"static/media/wi-night-clear.d928be0a.svg\";","export default __webpack_public_path__ + \"static/media/wi-cloud.55d92a74.svg\";","export default __webpack_public_path__ + \"static/media/wi-night-cloudy.0d360342.svg\";","export default __webpack_public_path__ + \"static/media/wi-na.5e5690b1.svg\";","export default __webpack_public_path__ + \"static/media/wi-fog.bc24dd64.svg\";","import StrongWind from '../../src/svg/wi-strong-wind.svg'\r\nimport DayRainWind from '../../src/svg/wi-day-rain-wind.svg'\r\nimport NRainWind from '../../src/svg/wi-night-rain-wind.svg'\r\nimport DayRain from '../../src/svg/wi-day-rain.svg'\r\nimport DaySnow from '../../src/svg/wi-day-snow.svg'\r\nimport DaySunny from '../../src/svg/wi-day-sunny.svg'\r\nimport NightClear from '../../src/svg/wi-night-clear.svg'\r\nimport Cloud from '../../src/svg/wi-cloud.svg'\r\nimport NCloud from '../../src/svg/wi-night-cloudy.svg'\r\nimport Na from '../../src/svg/wi-na.svg'\r\nimport Fog from '../../src/svg/wi-fog.svg'\r\nimport {mainData} from \"../components/app/types\";\r\n\r\nexport const imgHandler = (code: string) => {\r\n    switch (code) {\r\n        case '01d':\r\n            return DaySunny\r\n        case '01n':\r\n            return NightClear\r\n\r\n        case '02d':\r\n            return Cloud\r\n        case '02n':\r\n            return NCloud\r\n\r\n        case '03d':\r\n            return Cloud\r\n        case '03n':\r\n            return NCloud\r\n\r\n        case '04d':\r\n            return Cloud\r\n        case '04n':\r\n            return NCloud\r\n\r\n        case '09d':\r\n            return DayRainWind\r\n        case '09n':\r\n            return NRainWind\r\n\r\n        case '10d':\r\n            return DayRain\r\n        case '10n':\r\n            return DayRain\r\n\r\n        case '11d':\r\n            return StrongWind\r\n        case '11n':\r\n            return StrongWind\r\n\r\n        case '13d':\r\n            return DaySnow\r\n        case '13n':\r\n            return DaySnow\r\n\r\n        case '50d':\r\n            return Fog\r\n        case '50n':\r\n            return Fog\r\n\r\n        default:\r\n            return Na\r\n    }\r\n}\r\n\r\n\r\nexport function getInfo(city: string, unit: boolean, setData: (data: mainData) => void) {\r\n\r\n    const API_KEY = \"14067ca47d30fb0bcb278f67509d646d\";\r\n\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit ? 'metric' : 'imperial'}&APPID=${API_KEY}&lang=ru`)\r\n        .then(response => response.json()).then(data => {\r\n        if (data.cod === \"404\") {\r\n            return;\r\n        }\r\n        if (data.cod === \"400\") {\r\n            return;\r\n        }\r\n            setData(data)\r\n        }\r\n    ).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nexport function getPlace(lat: number, lon: number, callback:(name: string)=>void) {\r\n    const url = \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/geolocate/address\";\r\n    const token = \"e352d574f32dc4f146c1607d71e6dfc53af5bd92\";\r\n    const query = { lat, lon, count:1 };\r\n\r\n    const options = {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"Authorization\": \"Token \" + token\r\n        },\r\n        body: JSON.stringify(query)\r\n    }\r\n\r\n    // @ts-ignore\r\n    fetch(url, options)\r\n        .then(response => response.json())\r\n        .then((result: any) => callback(result?.suggestions[0]?.data?.city))\r\n        .catch(error => console.log(\"error\", error));\r\n}","import React, {useEffect, useState} from 'react';\r\nimport s from './Header.module.css'\r\nimport {mainData} from \"../app/types\";\r\nimport {Input, Space} from 'antd';\r\nimport {getInfo, getPlace} from \"../../helpers/helpers\";\r\n\r\nconst {Search} = Input;\r\n\r\ninterface IHeader {\r\n    data?: mainData\r\n    setData: (val: mainData) => void\r\n    setOpenSearch: (val: boolean) => void\r\n    openSearch: boolean\r\n    inputRef: any\r\n}\r\n\r\nexport const Header: React.FC<IHeader> = ({\r\n                                              data,\r\n                                              setData,\r\n                                              setOpenSearch,\r\n                                              openSearch,\r\n                                              inputRef,\r\n                                          }) => {\r\n\r\n\r\n    const [degree, setDegree] = useState(true)\r\n    const [cityName, setCityName] = useState<string>('Moscow')\r\n\r\n    useEffect(() => {\r\n        getInfo(cityName, degree, (val) => {\r\n            setOpenSearch(false)\r\n            setData(val)\r\n        })\r\n    }, [degree])\r\n\r\n    const onSearch = (name: string) => {\r\n        getInfo(name, degree, (val) => {\r\n            setOpenSearch(false)\r\n            setData(val)\r\n            setCityName(name)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.headerBlock}\r\n             ref={inputRef}\r\n             onClick={(e) => e.stopPropagation()}>\r\n            <div className={s.leftBlock}>\r\n                <span className={s.cityName}>\r\n                    {data?.name}\r\n                </span>\r\n                {\r\n                    openSearch ?\r\n                        <Space direction=\"vertical\">\r\n                            <Search placeholder=\"Город\"\r\n                                    onSearch={onSearch}\r\n                                    style={{width: 200}}/>\r\n                        </Space> :\r\n                        <span className={s.bottomText} onClick={() => setOpenSearch(true)}>\r\n                            Сменить город\r\n                        </span>\r\n                }\r\n            </div>\r\n            <div className={s.rightBlock}>\r\n                <span className={s.cityName} onClick={() => setDegree(!degree)}>\r\n                    <span style={{opacity:degree ? 1 : 0.5}}>С</span> /<span style={{opacity:!degree ? 1 : 0.5}}> F</span>\r\n                </span>\r\n                <span className={s.bottomText} onClick={()=>{\r\n                    navigator.geolocation.getCurrentPosition(position => {\r\n                        const { latitude, longitude } = position.coords;\r\n                        getPlace(latitude,longitude, (name) => getInfo(name, degree, (val) => {\r\n                            setOpenSearch(false)\r\n                            setData(val)\r\n                            setCityName(name)\r\n                        }))\r\n                    });\r\n                }}>\r\n                    Моё местоположение\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport s from './Center.module.css'\r\nimport {mainData} from \"../app/types\";\r\nimport {imgHandler} from \"../../helpers/helpers\";\r\n\r\nexport const Center: React.FC<{ data?: mainData }> = ({data}) => {\r\n\r\n    function ucFirst(str: string) {\r\n        if (!str) return str;\r\n        return str[0].toUpperCase() + str.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.mainBlock}>\r\n            {\r\n                data?.weather?.map(item => {\r\n                    return (\r\n                        <>\r\n                            <div className={s.tempBlock}>\r\n                                <object type=\"image/svg+xml\" data={imgHandler(item.icon)} width={'50%'}\r\n                                        height={'50%'}> </object>\r\n                                <span>{Math.round(data?.main?.temp)}°</span>\r\n                            </div>\r\n                            <span>{ucFirst(item.description)}</span>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Footer.module.css'\r\nimport {mainData} from \"../app/types\";\r\n\r\nexport const Footer: React.FC<{ data?: mainData }> = ({data}) => {\r\n    return (\r\n        <div className={s.footerBlock}>\r\n            <div className={s.infoBlock}>\r\n                <span className={s.headerText}>\r\n                    Ветер\r\n                </span>\r\n                <span className={s.bottomText}>\r\n                    {data?.wind?.speed} м/с\r\n                </span>\r\n            </div>\r\n            <div className={s.infoBlock}>\r\n                <span className={s.headerText}>\r\n                    Давление\r\n                </span>\r\n                <span className={s.bottomText}>\r\n                    {data?.main?.pressure} мм рт. ст.\r\n                </span>\r\n            </div>\r\n            <div className={s.infoBlock}>\r\n                <span className={s.headerText}>\r\n                    Влажность\r\n                </span>\r\n                <span className={s.bottomText}>\r\n                    {data?.main?.humidity}%\r\n                </span>\r\n            </div>\r\n            <div className={s.infoBlock}>\r\n                <span className={s.headerText}>\r\n                    Ощущается как\r\n                </span>\r\n                <span className={s.bottomText}>\r\n                    {data?.main?.feels_like && Math.round(data?.main?.feels_like)}°\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './App.module.css'\r\nimport './App.module.css';\r\nimport {mainData} from \"./types\";\r\nimport {Header} from \"../header/Header\";\r\nimport {Center} from \"../center/Center\";\r\nimport {Footer} from \"../footer/Footer\";\r\nimport {getInfo} from \"../../helpers/helpers\";\r\n\r\nfunction App() {\r\n\r\n    const [data, setData] = useState<mainData>()\r\n    const inputRef = React.useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n        getInfo('Moscow', true, setData)\r\n    }, [])\r\n\r\n    const [openSearch, setOpenSearch] = useState(false)\r\n\r\n    return (\r\n        <div className={s.mainBlock}\r\n             onClick={(e) => e.target !== inputRef.current && setOpenSearch(false)}>\r\n            <Header data={data}\r\n                    setData={setData}\r\n                    openSearch={openSearch}\r\n                    setOpenSearch={setOpenSearch}\r\n                    inputRef={inputRef}/>\r\n            <Center data={data}/>\r\n            <Footer data={data}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'antd/dist/antd.css';\r\nimport App from './components/app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}